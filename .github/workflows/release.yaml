name: Release

on:
  workflow_call:
    inputs:
      config-name:
        required: true
        type: string
    secrets:
      PAT:
        required: true
  
permissions:
  contents: read

jobs:
  initial_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Enable python
      uses: actions/setup-python@v3

    - name: Run python script
      env:
          GITHUB_TOKEN: ${{ secrets.PAT }} 
          GITHUB_REPOSITORY: ${{env.GITHUB_REPOSITORY}}
      run: |
           pip install requests
           python3 ./.github/workflows/scripts/initial_release.py
    - name: create initial release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}  
      shell: bash
      run: |
          chmod +x release.sh
          ./release.sh
          rm release.sh
  update_release_draft:
    needs: initial_release
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions-ecosystem/action-get-merged-pull-request@v1
        id: get-merged-pr
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: release-drafter/release-drafter@v5
        with:
          publish: ${{ !contains(steps.get-merged-pr.outputs.labels, 'automerge') }}
          prerelease: false # Setting this option to true will have the upcoming release marked as a pre-release/ not production ready. By default we want it to remain as false.
          config-name: ${{ inputs.config-name }} 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
